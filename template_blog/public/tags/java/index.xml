<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - 标签 - Kenger`s Blog</title>
        <link>https://blog.kenger.work/tags/java/</link>
        <description>Java - 标签 - Kenger`s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>kengerlwl@qq.com (kenger)</managingEditor>
            <webMaster>kengerlwl@qq.com (kenger)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 10 Apr 2024 15:27:31 &#43;0000</lastBuildDate><atom:link href="https://blog.kenger.work/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>java-IO</title>
    <link>https://blog.kenger.work/java-io/</link>
    <pubDate>Wed, 10 Apr 2024 15:27:31 &#43;0000</pubDate>
    <author>kenger</author>
    <guid>https://blog.kenger.work/java-io/</guid>
    <description><![CDATA[计算机IO结构 运算器、控制器、存储器、输入设备、输出设备。 冯诺依曼体系结构 **输入设备（比如键盘）和输出设备（比如显示器）**都属于外部设备]]></description>
</item>
<item>
    <title>Spring Cloud.md</title>
    <link>https://blog.kenger.work/spring-cloud/</link>
    <pubDate>Sat, 06 Apr 2024 15:27:31 &#43;0000</pubDate>
    <author>kenger</author>
    <guid>https://blog.kenger.work/spring-cloud/</guid>
    <description><![CDATA[为什么需要微服务 传统的Web项目 传统的WEB应用核心分为业务逻辑、适配器以及API或通过UI访问的WEB界面。业务逻辑定义业务流程、业务规则]]></description>
</item>
<item>
    <title>Spring MVC and Boot</title>
    <link>https://blog.kenger.work/spring-mvc-boot/</link>
    <pubDate>Sat, 06 Apr 2024 15:27:31 &#43;0000</pubDate>
    <author>kenger</author>
    <guid>https://blog.kenger.work/spring-mvc-boot/</guid>
    <description><![CDATA[Spring MVC 什么是Spring MVC? Spring MVC是一个基于Java的实现了MVC设计模式的请求驱动类型的轻量级Web框架，通过把模型-视图-控制器分离，将w]]></description>
</item>
<item>
    <title>Spring常见问题</title>
    <link>https://blog.kenger.work/spring%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
    <pubDate>Fri, 05 Apr 2024 15:27:31 &#43;0000</pubDate>
    <author>kenger</author>
    <guid>https://blog.kenger.work/spring%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[基础概念 spring的底层 底层都依赖于它的两个核心特性，也就是**(IOC)依赖注入**（dependency injection，DI）和面]]></description>
</item>
<item>
    <title>java-JVM学习</title>
    <link>https://blog.kenger.work/java-jvm/</link>
    <pubDate>Mon, 25 Mar 2024 15:27:31 &#43;0000</pubDate>
    <author>kenger</author>
    <guid>https://blog.kenger.work/java-jvm/</guid>
    <description><![CDATA[什么是JVM？ JVM（Java Virtual Machine）是用于运行Java字节码的虚拟机，包括一套字节码指令集、一组程序寄存器、一个虚拟机栈、一个虚]]></description>
</item>
<item>
    <title>java并发多线程相关</title>
    <link>https://blog.kenger.work/java%E5%B9%B6%E5%8F%91%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3/</link>
    <pubDate>Mon, 25 Mar 2024 15:27:31 &#43;0000</pubDate>
    <author>kenger</author>
    <guid>https://blog.kenger.work/java%E5%B9%B6%E5%8F%91%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3/</guid>
    <description><![CDATA[守护线程与用户线程有什么区别？ 守护线程：运行在后台，为其他前台线程服务。也可以说守护线程是 JVM 中非守护线程的 “佣人”。一旦所有用户线程都结束运]]></description>
</item>
<item>
    <title>java反射</title>
    <link>https://blog.kenger.work/java%E5%8F%8D%E5%B0%84/</link>
    <pubDate>Mon, 25 Mar 2024 15:27:31 &#43;0000</pubDate>
    <author>kenger</author>
    <guid>https://blog.kenger.work/java%E5%8F%8D%E5%B0%84/</guid>
    <description><![CDATA[反射概念 Java的反射（reflection）机制是指在程序的运行状态中，可以构造任意一个类的对象，可以了解任意一个对象所属的类，可以了解任]]></description>
</item>
<item>
    <title>java基础</title>
    <link>https://blog.kenger.work/java%E5%9F%BA%E7%A1%80/</link>
    <pubDate>Tue, 22 Aug 2023 15:27:31 &#43;0000</pubDate>
    <author>kenger</author>
    <guid>https://blog.kenger.work/java%E5%9F%BA%E7%A1%80/</guid>
    <description><![CDATA[数据类型 基本数据类型 运算 参数传递 Java 的参数是以值传递的形式传入方法中，而不是引用传递。(但是由于java默认用的就是指针来指向对象，所以在函数]]></description>
</item>
<item>
    <title>java容器</title>
    <link>https://blog.kenger.work/java%E5%AE%B9%E5%99%A8/</link>
    <pubDate>Tue, 22 Aug 2023 15:27:31 &#43;0000</pubDate>
    <author>kenger</author>
    <guid>https://blog.kenger.work/java%E5%AE%B9%E5%99%A8/</guid>
    <description><![CDATA[概览 容器主要包括 Collection 和 Map 两种，Collection 存储着对象的集合，而 Map 存储着键值对（两个对象）的映射表。 Collection 1. Set TreeSet：**基于红黑树]]></description>
</item>
</channel>
</rss>
